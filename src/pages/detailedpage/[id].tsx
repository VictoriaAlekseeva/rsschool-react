import { wrapper } from '@/store/store';
import { GetServerSideProps, InferGetServerSidePropsType } from 'next/types';
import { BeerData } from '@/types/interface';
import {
  getAllBeers,
  getBeers,
  getSingleBeer,
} from '@/store/services/apiServices';
import Head from 'next/head';
import Layout from '../Layout';
import BeerDetails from '@/components/beerDetails/BeerDetails';

export const getServerSideProps: GetServerSideProps =
  wrapper.getServerSideProps((store) => async (context) => {
    const beer_name =
      typeof context.query.beer_name === 'string'
        ? context.query.beer_name
        : '';
    const page =
      typeof context.query.page === 'string' ? parseInt(context.query.page) : 1;
    const per_page =
      typeof context.query.per_page === 'string'
        ? parseInt(context.query.per_page)
        : 5;

    const { id } = context.params || {};

    let detailedInfo: BeerData[] | null = null;

    if (id) {
      detailedInfo = await store
        .dispatch(getSingleBeer.initiate({ id }))
        .unwrap();
    }

    let data: BeerData[] | null = null;

    if (beer_name) {
      data = await store
        .dispatch(getBeers.initiate({ beer_name, per_page, page }))
        .unwrap();
    } else {
      data = await store
        .dispatch(getAllBeers.initiate({ per_page, page }))
        .unwrap();
    }

    // if (!data) {
    //   return { notFound: true };
    // }

    return { props: { beerData: data, beerInfo: detailedInfo } };
  });

const Home: React.FC<
  InferGetServerSidePropsType<typeof getServerSideProps>
> = ({ beerData, beerInfo }) => {
  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>PunkAPIBeer</title>
      </Head>
      <Layout beerData={beerData}>
        <BeerDetails beerInfo={beerInfo} />
      </Layout>
    </>
  );
};

export default Home;
